<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Reputable Journal - Teaching</title><link href="https://archive.reputablejournal.com/" rel="alternate"></link><link href="https://archive.reputablejournal.com/feeds/teaching.atom.xml" rel="self"></link><id>https://archive.reputablejournal.com/</id><updated>2016-09-22T00:00:00-05:00</updated><entry><title>Preparing a Data Science Curriculum</title><link href="https://archive.reputablejournal.com/preparing-for-datascience.html" rel="alternate"></link><published>2016-09-22T00:00:00-05:00</published><updated>2016-09-22T00:00:00-05:00</updated><author><name>Brad Miller</name></author><id>tag:archive.reputablejournal.com,2016-09-22:/preparing-for-datascience.html</id><summary type="html">&lt;p&gt;In just under a week, we will officially launch a new major, in Data Science, at Luther College.  I've spent a pretty good part of my summer preparing the first two classes of that major, and as I look back on it its been an interesting experience.&lt;/p&gt;
&lt;p&gt;Data Science is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In just under a week, we will officially launch a new major, in Data Science, at Luther College.  I've spent a pretty good part of my summer preparing the first two classes of that major, and as I look back on it its been an interesting experience.&lt;/p&gt;
&lt;p&gt;Data Science is a new field, and as such there are no &amp;quot;standard textbooks&amp;quot;. finding a Data Science 101 text is impossible.  There are hundreds of books on Data Science, and all of take their own approach.  Many of them are much more oriented towards working professionals with years of statistics and/or programming in their background.  Others are oriented much more towards a specific field either statistics or computer science.  We are aiming towards a middle ground.  Territory that is not well charted.  We are aiming our data science program at undergraduate students at a Liberal Arts college.&lt;/p&gt;
&lt;p&gt;In order to understand our program, I want to make our learning goals clear.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Analytical Thinking: Students can think about, examine, and explain the relationships that may exist between and within sets of data.  These relationships may include such things as patterns, cause and effect, similarities and differences, and trends.&lt;/li&gt;
&lt;li&gt;Communication:  Students can communicate the results of their work using appropriate techniques to tell the most compelling story.  These include oral presentation, visualization, and the written word.&lt;/li&gt;
&lt;li&gt;Problem Solving: Students can apply appropriate strategies to find, conceptualize, and implement a step by step solution.  In addition, they can acquire and learn new tools and techniques in order to adapt to changes in technology and scale.&lt;/li&gt;
&lt;li&gt;Collaboration: Students can participate in shared responsibility and appreciation for understanding how problems can have an impact within and across disciplines.  They can work with others in a cooperative manner to produce meaningful results.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These goals are translated into the two courses I'm teaching this fall in the following ways.  First in our DS 120 Introduction to Data Science course:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduce some of the key analysis techniques used in Data Science&lt;/li&gt;
&lt;li&gt;Develop the practical skill of working with Excel&lt;/li&gt;
&lt;li&gt;Learn to think about a data set and generate a list of questions for further analysis&lt;/li&gt;
&lt;li&gt;Practice the art of presenting your analysis and findings in writing, verbally, and graphically&lt;/li&gt;
&lt;li&gt;Read and Discuss case studies of other people's analysis&lt;/li&gt;
&lt;li&gt;Learn to consider the Ethical dilemmas practictioners of data science face&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data Science 120 will be a very breadth first class.  We'll look at techniques for summarizing and presenting data graphically mostly with excel and Tableau.  We'll look at some machine learning techniques that we can implement in excel.&lt;/p&gt;
&lt;p&gt;Then in DS 320 Data Analysis and visualization&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To become a skeptical consumer of data, statistics, and visualizations&lt;/li&gt;
&lt;li&gt;Develop an understanding of what makes a good Visualization&lt;/li&gt;
&lt;li&gt;To practice making and presenting several different kinds of data visualizations&lt;/li&gt;
&lt;li&gt;To become a competent &amp;quot;data munger&amp;quot;&lt;/li&gt;
&lt;li&gt;To explore several of the tools commonly used in exploratory data analysis:&lt;ul&gt;
&lt;li&gt;Jupyter Notebooks and friends such as Pandas, Bokeh, Altair and other&lt;/li&gt;
&lt;li&gt;Tableau&lt;/li&gt;
&lt;li&gt;R Studio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To put into practice some &amp;quot;statistics for hackers&amp;quot; techniques for validating claims that people make about their data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data Science 320 will go into a lot more depth on the analysis and visualization side.  We have another class for the spring that will go in depth on applied machine learning.&lt;/p&gt;
&lt;p&gt;So, how do you prepare to teach this stuff?  With no existing textbooks that map directly onto our curriculum it has been quite a summer!  At times I feel like I have veered wildly across the curriculum map.  At other times I have felt at peace.  In the end, I know that it will be fine, and that I'll learn a lot from this first time around, and as in all software projects, I'll iterate and make it better the next time.&lt;/p&gt;
&lt;section id="thankful-for-helpful-alumni"&gt;
&lt;h2&gt;Thankful for Helpful Alumni&lt;/h2&gt;
&lt;p&gt;First, I want to thank the many alumni that have taken the time to reach out to me to discuss data science.  Its great to see the excitement with which our alumni are embracing this new major.  I've had many great discussions with people about data science in practice.  And lots of interest in future internships for our new majors.  Many of the ideas I have about this fall come directly from these conversations.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="it-s-all-about-the-data"&gt;
&lt;h2&gt;It's all about the Data&lt;/h2&gt;
&lt;p&gt;Second, its all about the data! duh!  Its data science, what else would it be about?  But really one of the most interesting parts of the summer has been to find and explore new data sets.  When you start to look you find out there are some really good one's out there.  And I'm sure I've missed a lot of other great sources of data.&lt;/p&gt;
&lt;p&gt;In my ideal classroom for these courses much of the learning would happen in the following way:  I found this cool dataset on X where X changes frequently enough to engage everyone.  Lets look at it and see if we can munge the data into shape to read with one our tool of the day.  OK, lets brainstorm some questions about this data.  Then how can we answer these questions?  How do we present the answer to these questions in a ethical and compelling story.&lt;/p&gt;
&lt;p&gt;Here are a few sources that I've run across.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class="m-link-wrap" href="https://github.com/caesar0301/awesome-public-datasets"&gt;https://github.com/caesar0301/awesome-public-datasets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="m-link-wrap" href="https://github.com/fivethirtyeight/data"&gt;https://github.com/fivethirtyeight/data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="m-link-wrap" href="https://cloud.google.com/bigquery/public-data/github"&gt;https://cloud.google.com/bigquery/public-data/github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="m-link-wrap" href="https://www.kaggle.com/datasets"&gt;https://www.kaggle.com/datasets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="m-link-wrap" href="http://www.bls.gov/data/"&gt;http://www.bls.gov/data/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="m-link-wrap" href="http://www.doe.gov"&gt;http://www.doe.gov&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="strange-how-lifelong-learning-works"&gt;
&lt;h2&gt;Strange how Lifelong Learning Works&lt;/h2&gt;
&lt;p&gt;One of the most interesting things, looking back on the summer,  is  the question &amp;quot;How have I leared enough to start the semester?&amp;quot;  I did find a couple of books especially compelling.  The work of Tufte was a real inspiration in preparing for the data visualization course.  But largely it has been online learning.  I've got a nice list of podcasts that I enjoy listening to in the morning and on my bike rides.  When I can get in a workout and count that time as class prep I feel like a productivity superhero.&lt;/p&gt;
&lt;p&gt;I'm a big fan of the Flipboard app on my iPad and I've  got a list of Flipboard channels on data science that that I've been reading and clipping. Many of these articles have already been incorporated into the reading list for both courses.&lt;/p&gt;
&lt;p&gt;I have also dipped my toe into a few coursera courses on machine learning, but those are less urgent since ML isn't until second semester.&lt;/p&gt;
&lt;section id="podcasts"&gt;
&lt;h3&gt;Podcasts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Data Skeptic&lt;/li&gt;
&lt;li&gt;Not so standard Deviations&lt;/li&gt;
&lt;li&gt;Data Stories&lt;/li&gt;
&lt;li&gt;Partially Derivative&lt;/li&gt;
&lt;li&gt;Whats the Point?&lt;/li&gt;
&lt;li&gt;99% Invisible -- not so much about data science but really interesting stories&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I feel like these have all really helped me get a better feel for the field, and the notes from many of these have lead me to really interesting academic conference papers or journal articles. None of these are ways that I would have used to prepare for class 13 years ago when I started as a new professor.  And as a professor at a college that preaches lifelong learning I think it is interesting that we often recoil at embracing the online world, yet I would guess I am not alone in embracing this technology for my own betterment.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</content><category term="Teaching"></category><category term="Teaching"></category><category term="DataScience"></category></entry><entry><title>What is Data Science?</title><link href="https://archive.reputablejournal.com/what-is-data-science.html" rel="alternate"></link><published>2016-05-02T00:00:00-05:00</published><updated>2016-05-02T00:00:00-05:00</updated><author><name>Brad Miller</name></author><id>tag:archive.reputablejournal.com,2016-05-02:/what-is-data-science.html</id><summary type="html">&lt;p&gt;Since Luther announced that it will offer a new major in Data Science starting next fall, I’ve been answering a lot of questions.  What is data science?  What does one do with a data science major?   What does a data scientist do?  Why study data science at Luther?  These …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since Luther announced that it will offer a new major in Data Science starting next fall, I’ve been answering a lot of questions.  What is data science?  What does one do with a data science major?   What does a data scientist do?  Why study data science at Luther?  These are great questions, and are all questions we thought about as we put together the major.  In this post, I’ll try to answer and provide some context for these questions.&lt;/p&gt;
&lt;h3&gt;We are Awash in Data&lt;/h3&gt;
&lt;p&gt;In my own lifetime I've seen the personal computer go from 48 kilobytes  (KB) of memory with external storage on a cassette tape. A few years later the first floppy drive stored about 48KB as well.  In 1986 my wife and I purchased a 128k Macintosh as our wedding gift to each other.  A few years later we bought our first hard drive. It was the size of a shoebox and held 20Mega Bytes (MB).  It seemed like an infinite amount of data.  Today my iPhone, a fraction of the size of that hard drive holds 128Giga Bytes of data.  Back in the 90's we used to talk about "information overload."  We spoke about the volume of information published on the internet as something like drinking water from a firehose instead of a straw.  Today that metaphor seems quaint, maybe even antiquated. &lt;/p&gt;
&lt;p&gt;The volume of data we generate every day is staggering.  The amount of data that Google alone stores in its servers is estimated to be 15 exabytes, that is 15 followed by 18 zeros!  For those of you that remember punch cards you can visualize 15 exabytes as a &lt;a href="https://what-if.xkcd.com/63/" title="XKCD"&gt;pile of cards three miles high&lt;/a&gt; covering all of New England!  Everywhere you go, someone or something is collecting data about you:  what you buy, what you read, where you eat, where you say, how you drive your car.&lt;/p&gt;
&lt;h3&gt;What does it all mean?&lt;/h3&gt;
&lt;p&gt;Often this data is collected and stored with little idea about how to use it.  I myself am guilty of that with my &lt;a href="http://runestoneinteractive.org" title="Runestone"&gt;own research&lt;/a&gt;.  Other times the data is collected quite intentionally.  The big question is “What does it all mean?”  That is where data science comes in.  Data Science is an emerging field that brings together ideas that have been around for years, or even centuries.  Most people define data science as "an interdisciplinary field about processes and systems to extract knowledge or insights from data in various forms"&lt;/p&gt;
&lt;h3&gt;Data Science in a Liberal Arts Context&lt;/h3&gt;
&lt;p&gt;As an interdisciplinary field of inquiry data science is perfect for a liberal arts college.  Combining statistics, computer science, writing, art, and ethics data science has application across the curriculum:  biology, economics, management, english, history, even music.  The best thing about data science is the job of a data scientist seems perfectly suited to many of our students.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The best data scientists have one thing in common: unbelievable curiosity. - D.J. Patil Chief Data Scientist of the United States.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to Eric Haller, VP of Experian, a global information services company, recently interviewed by the Chicago Tribune.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A data scientist is an explorer, scientist, and analyst all combined into one role.  They have the curiosity and passion of an explorer for jumping into new problems, new dta sets and new technologies.  They love going where no man has gone before in taking on a new approach to taking on age old challenges or coming up with an approach for a very new problem where nobody has tried to solve it in the past.&lt;/p&gt;
&lt;p&gt;They can write their own code and develop their own algorithms.  They can keep up with the scientific breakthrough of the day and regularly apply them to their own work.  And as an analyst they have a penchant for detail, continually diving deeper to find answers.  Finding treasure in the data, analysis and the details give them an adrenaline rush.&lt;/p&gt;
&lt;p&gt;Our data scientists tend to operate with a noble purpose of trying to do good things for people, businesses and society with data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, all of this exploration and analysis means nothing if you cannot communicate it to people. In a recent Harvard Business Review article by Jeff Bladt and Bob Filbin entitled: &lt;strong&gt;A Data Scientist's Real Job: Storytelling&lt;/strong&gt;, they elaborate&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using Big Data successfully requires human translation and context whether it's for your staff or the people your organization is trying to reach.  Without a human frame, like photos or words that make emotion salient, data will only confuse, and certainly won't lead to smart organizational behavior.
&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Stories are great, but in data science you better make sure they are true, especially when you are dealing with stories about numbers.  In a recent article entitled &lt;a href="http://www.slate.com/articles/technology/future_tense/2016/02/how_to_bring_better_ethics_to_data_science.html" title="Slate - The Ethical Data Scientist"&gt;The Ethical Data Scientist&lt;/a&gt;, the sub-title really tells the story:  &lt;em&gt;People have too much trust in numbers to be intrinsically objective&lt;/em&gt;.
The better known phrase is that “Statistics don’t lie, but statisticians sometimes do.”   The challenge for the data scientist is to avoid the trap of choosing the statistics that only tell the story they want to tell.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The ethical data scientist would strive to improve the world, not repeat it. That would mean deploying tools to explicitly construct fair processes. As long as our world is not perfect, and as long as data is being collected on that world, we will not be building models that are improvements on our past unless we specifically set out to do so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As the current semester winds down, and I begin to prioritize my tasks for the Summer, and think about Fall class preparation, I’m really excited about teaching two new courses next fall, and a bit daunted by the responsibility of building the foundation for Luther’s new data science program.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://hbr.org/2013/03/a-data-scientists-real-job-sto/" title="HBR"&gt;https://hbr.org/2013/03/a-data-scientists-real-job-sto/&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Teaching"></category><category term="Teaching"></category><category term="Luther"></category></entry><entry><title>Is Google Bad for CS1?</title><link href="https://archive.reputablejournal.com/google-intro-cs.html" rel="alternate"></link><published>2014-10-24T16:11:58+00:00</published><updated>2014-10-24T16:11:58+00:00</updated><author><name>Brad Miller</name></author><id>tag:archive.reputablejournal.com,2014-10-24:/google-intro-cs.html</id><summary type="html">&lt;p&gt;I've just finished teaching a seven week course called &lt;em&gt;Fundamentals of Web Development&lt;/em&gt;.  Its an introductory course for potential CS majors and non-majors alike.  I enjoyed teaching this course, but I learned something that I think has been right in front of me for years, that became very apparent with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've just finished teaching a seven week course called &lt;em&gt;Fundamentals of Web Development&lt;/em&gt;.  Its an introductory course for potential CS majors and non-majors alike.  I enjoyed teaching this course, but I learned something that I think has been right in front of me for years, that became very apparent with this particular mix of students.  Google, Stack Overflow, and the like were creating chaos for these students.&lt;/p&gt;
&lt;p&gt;It was toward the end of the seven weeks when this little epiphany happened for me.  We were working on a todo list web application.  Its a nice practical example that uses just enough HTML, CSS, and Javascript to tie everything together.  But, it has enough complexity that it really challeges some of the students who only have 5 weeks worth of computer science behind them.&lt;/p&gt;
&lt;p&gt;My style in this class is to talk about some concepts in class, and then do some implementation of the next phase of the project.  Just to get them started, and then have them try to finish up the next phase as a homework project before the next class meeting.  My goal is to have everyone with a working app, something they can show their friends and family and something that feels useful to them.&lt;/p&gt;
&lt;p&gt;What happened was that I saw a stream of students coming into my office with all manner of code.  Most of it &lt;strong&gt;way&lt;/strong&gt; beyond anything I would teach in this course.  They were totally confused about how they should know some of the things they had obviously copied from some examples on the Internet.&lt;/p&gt;
&lt;p&gt;So I asked a few of them how they found this stuff.  They said &amp;quot;I googled javascript todo list.&amp;quot;  I don't prohibit students from using Google, but I do remind them that their work needs to be their own, and that if they don't understand the code they find, then its probably not a good idea to use in any way.  Yeah, Right.&lt;/p&gt;
&lt;p&gt;So, I googled &amp;quot;javascript todo list.&amp;quot;  Here's what I found.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Top hit &lt;a href="http://todomvc.com"&gt;TodoMVC&lt;/a&gt;  -- Nope, we are not ready for MVC yet at all.&lt;/li&gt;
&lt;li&gt;Next &lt;a href="http://www.sitepoint.com/building-list-jquery-local-storage/"&gt;Building a Todo List with jQuery and localStorage&lt;/a&gt;  Nope, we are not going down the jQuery path either.&lt;/li&gt;
&lt;li&gt;Next &lt;a href="http://codereview.stackexchange.com/questions/43255/simple-to-do-list-as-a-single-page-application"&gt;stackexchange - building a simple todolist application&lt;/a&gt;  -- This one starts out by creating a TaskList object and then a Task object, and so forth.  Again this is much more complicated than we are ready for.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And on it goes.&lt;/p&gt;
&lt;p&gt;The problem is all of these examples are way beyond where we are at, and are all using techniques different from the simple techniques that I have taught them in class.  So rather than being a help, Google is ending up sending these students into a rabbit hole from which they are not equipped to find their way out.  The more I thought about it, the more I realized how often this probably happens in other introductory CS courses.&lt;/p&gt;
&lt;section id="forty-two-says-deep-thought"&gt;
&lt;h2&gt;Forty Two Says Deep Thought&lt;/h2&gt;
&lt;p&gt;The problem isn't that google is bad, the problem is that these students are not equipped to ask the right question to get a helpful answer.  So this has really got me wondering how others handle this situation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Should I insist that they come and talk to me if they are confused rather than Googling?&lt;/li&gt;
&lt;li&gt;Do I outlaw using Google to get hints?&lt;/li&gt;
&lt;li&gt;Should I point them at some resources that are more appropriate?&lt;/li&gt;
&lt;li&gt;Should I be spending time teaching them the appropriate ways to search for help?&lt;/li&gt;
&lt;li&gt;Start a project to create a StackOverflow like site for computer science students that would give an answer appropriate to the students skill level?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Googling and using StackOverflow are good skills for a computer scientist to have, but for the first time, I'm thinking that teaching some search engine literacy in computer science may be worth some time.
I'm very interested to hear the experiences of my other colleagues.&lt;/p&gt;
&lt;/section&gt;
</content><category term="Teaching"></category></entry><entry><title>why moocs? why not?</title><link href="https://archive.reputablejournal.com/why-moocs-why-not.html" rel="alternate"></link><published>2014-04-02T16:51:30-05:00</published><updated>2014-04-02T16:51:30-05:00</updated><author><name>Brad Miller</name></author><id>tag:archive.reputablejournal.com,2014-04-02:/why-moocs-why-not.html</id><content type="html">&lt;p&gt;I just wanted to include a link here to my latest post on Luther's Ideas and Creations blog.  Its just some thoughts and questions I had on MOOCs and online education at Luther College.  &lt;a href="https://www.luther.edu/ideas-creations-blog/?story_id=541741"&gt;Why Moocs? Why Not?&lt;/a&gt;&lt;/p&gt;</content><category term="Teaching"></category><category term="education"></category></entry><entry><title>what most schools don't teach (by codeorg) this is a really great video, that just might inspire you to become a computer science major.</title><link href="https://archive.reputablejournal.com/what-most-schools-don-t-teach-by-codeorg-this-is-a-really-great-video-that-just-.html" rel="alternate"></link><published>2013-02-26T00:00:00-06:00</published><updated>2013-02-26T00:00:00-06:00</updated><author><name>Brad Miller</name></author><id>tag:archive.reputablejournal.com,2013-02-26:/what-most-schools-don-t-teach-by-codeorg-this-is-a-really-great-video-that-just-.html</id><content type="html">&lt;iframe width="480" height="270" src="http://www.youtube.com/embed/nKIu9yen5nc?feature=oembed" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="Teaching"></category></entry><entry><title>we had a small mishap this morning. a fork bomb that was meant for a virtual machine accidentally got pasted into a terminal window open to our server. now i'm having an identity crisis.</title><link href="https://archive.reputablejournal.com/we-had-a-small-mishap-this-morning-a-fork-bomb-that-was-meant-for-a-virtual-mach.html" rel="alternate"></link><published>2013-02-22T00:00:00-06:00</published><updated>2013-02-22T00:00:00-06:00</updated><author><name>Brad Miller</name></author><id>tag:archive.reputablejournal.com,2013-02-22:/we-had-a-small-mishap-this-morning-a-fork-bomb-that-was-meant-for-a-virtual-mach.html</id><content type="html">&lt;p&gt;&lt;img src="/images/24.media.tumblr.com/24aa6881ffb28285f2fd29667023bbaf/tumblr_min3l0yfAk1r729pmo1_1280.jpe" /&gt;&lt;/p&gt;
&lt;p&gt;We had a small mishap this morning. A fork bomb that was meant for a virtual machine accidentally got pasted into a terminal window open to our server.   Now I&amp;#x27;m having an identity crisis. &lt;/p&gt;</content><category term="Teaching"></category></entry><entry><title>sal khan's commencement address - mit news office</title><link href="https://archive.reputablejournal.com/sal-khan-s-commencement-address-mit-news-office.html" rel="alternate"></link><published>2012-06-11T00:00:00-05:00</published><updated>2012-06-11T00:00:00-05:00</updated><author><name>Brad Miller</name></author><id>tag:archive.reputablejournal.com,2012-06-11:/sal-khan-s-commencement-address-mit-news-office.html</id><content type="html">&lt;p&gt;(via &lt;a href="http://www.instapaper.com/"&gt;Instapaper&lt;/a&gt;)&lt;/p&gt;</content><category term="Teaching"></category></entry><entry><title>javascript the definitive guide sixth edition pdf download ebook - davidflanagan.com</title><link href="https://archive.reputablejournal.com/javascript-the-definitive-guide-sixth-edition-pdf-download-ebook-davidflanagan-c.html" rel="alternate"></link><published>2011-04-26T00:00:00-05:00</published><updated>2011-04-26T00:00:00-05:00</updated><author><name>Brad Miller</name></author><id>tag:archive.reputablejournal.com,2011-04-26:/javascript-the-definitive-guide-sixth-edition-pdf-download-ebook-davidflanagan-c.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.davidflanagan.com/2011/04/javascript-the-1.html"&gt;JavaScript: The Definitive Guide Sixth Edition pdf download ebook - davidflanagan.com&lt;/a&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Flannigan is a good author, I find his books to be well written and very useful.  As an author myself, its sad to see.  I know that the first time I saw a student reading my textbook book for …&lt;/div&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.davidflanagan.com/2011/04/javascript-the-1.html"&gt;JavaScript: The Definitive Guide Sixth Edition pdf download ebook - davidflanagan.com&lt;/a&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Flannigan is a good author, I find his books to be well written and very useful.  As an author myself, its sad to see.  I know that the first time I saw a student reading my textbook book for free on Google it almost floored me.  &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I don't write textbooks to make a lot of money, so its not like google is depriving me of a huge income, but there is that kick-in-the-gut feeling that someone has completely devalued your creation when you see it out there for free.  Its like, come on, I worked hard on this book for two years, putting all of my best thinking and ideas into it and you can't even bring  yourself to pay the $45 for it?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So, if you need a book on Javascript or jQuery, do yourself a favor and buy this guys books.&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/2759017781463016019-433157051186815373?l=blog.bonelakesoftware.com' alt='' /&gt;&lt;/div&gt;&lt;/p&gt;</content><category term="Teaching"></category></entry><entry><title>getting unicode right in python - nick's blog</title><link href="https://archive.reputablejournal.com/getting-unicode-right-in-python-nick-s-blog.html" rel="alternate"></link><published>2010-11-16T00:00:00-06:00</published><updated>2010-11-16T00:00:00-06:00</updated><author><name>Brad Miller</name></author><id>tag:archive.reputablejournal.com,2010-11-16:/getting-unicode-right-in-python-nick-s-blog.html</id><summary type="html">&lt;div class='posterous_autopost'&gt;&lt;div class="posterous_bookmarklet_entry"&gt; &lt;blockquote&gt;&lt;div&gt;    &lt;h3&gt;Getting unicode right in Python&lt;/h3&gt;  &lt;p&gt;  Posted by Nick Johnson    | Filed under    &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;python&lt;/a&gt;,    &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;text&lt;/a&gt;,    &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;unicode&lt;/a&gt;,    &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;rant&lt;/a&gt;      &lt;/p&gt;  &lt;p&gt;Yup, I'm back from holidays! Apologies to everyone for the delayed return - it's taking me a long while to catch up on everything that built up while I was away.&lt;/p&gt;    &lt;p&gt;Proper text processing - specifically, correct …&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class='posterous_autopost'&gt;&lt;div class="posterous_bookmarklet_entry"&gt; &lt;blockquote&gt;&lt;div&gt;    &lt;h3&gt;Getting unicode right in Python&lt;/h3&gt;  &lt;p&gt;  Posted by Nick Johnson    | Filed under    &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;python&lt;/a&gt;,    &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;text&lt;/a&gt;,    &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;unicode&lt;/a&gt;,    &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;rant&lt;/a&gt;      &lt;/p&gt;  &lt;p&gt;Yup, I'm back from holidays! Apologies to everyone for the delayed return - it's taking me a long while to catch up on everything that built up while I was away.&lt;/p&gt;    &lt;p&gt;Proper text processing - specifically, correct handling of unicode - is one of those things that consistently confounds even experienced developers. This isn't because it's difficult, but rather, I believe, because most developers carry around a few key misconceptions about what text (in the context of software) is and how it's represented. A search on StackOverflow for &lt;a href="http://stackoverflow.com/search?q=unicodedecodeerror"&gt;UnicodeDecodeError&lt;/a&gt; demonstrates just how prevalent these misconceptions are. These misconceptions date back to the days before unicode - longer than many developers have been in the industry, including myself - but they're still nothing if not widespread. This is in part because a number of well known and popular languages continue to, at worst, perpetuate the misunderstandings, and at best are insufficiently good at helping developers get it right.&lt;/p&gt;    &lt;p&gt;We can divide languages into four categories along the axis of unicode support:&lt;/p&gt;    &lt;ol&gt;  &lt;li&gt;Languages that were written before unicode was defined, or widespread. C and C++ fall into this category. Languages in this category tend to have unicode support that's spotty, not built into the language, or difficult to use correctly, making the path of least resistance the wrong one, more often than not.&lt;/li&gt;  &lt;li&gt;Languages that should know better. These languages were written after unicode was already widespread, but managed to get things horribly wrong. They have all the weaknesses of category 1, without the excuse of age. Prime amongst these, in my experience, is PHP, though there are doubtless many more languages that do just as badly.&lt;/li&gt;  &lt;li&gt;Languages that get it basically right, but have a few critical flaws. Languages in this category are 'modern' and understand unicode, but fail to make the path of least resistance for developers the correct one, which results in some serious shortfalls in unicode support for things implemented in these languages. Python 2.X, to my dismay, falls into this category - more about which, later.&lt;/li&gt;  &lt;li&gt;Languages that Get It Right. They support unicode, and they make it easy to do the right thing, and hard to do the wrong thing. Java and the .NET platform both fall into this category.&lt;/li&gt;  &lt;/ol&gt;    &lt;p&gt;So what's the deal with unicode, and how are we getting it wrong? Joel's post, &lt;a href="http://www.joelonsoftware.com/articles/Unicode.html"&gt;the absolute minimum every software developer absolutely, positively must know about unicode&lt;/a&gt; is an excellent place to start for this, but for the sake of brevity and those who are naturally impatient, I'll summarize.&lt;/p&gt;    &lt;h3&gt;Characters and bytes&lt;/h3&gt;    &lt;p&gt;The essential fact that you &lt;b&gt;must&lt;/b&gt; understand in order to handle text properly is the abstract concept of a character. A character is a representation of a single symbol in a piece of text - a platonic ideal, of sorts. Crucially, a character is &lt;b&gt;not&lt;/b&gt; a byte. Let me repeat for emphasis: A character is &lt;b&gt;not, not, not&lt;/b&gt; a byte. Furthermore, there's no single way of representing a given character as one or more bytes - as I said, a character is the platonic ideal of the smallest unit of text.&lt;/p&gt;    &lt;p&gt;Unicode, then, is a way of defining a set of characters that everyone can agree on. It consists of a huge database of characters, and each one is associated with a unique number, called a code point. Thus, the english letter capital A has the codepoint U+0041. The euro symbol has codepoint U+20A0, and so forth. A text string is simply a series of these codepoints, representing the character for each element in the string.&lt;/p&gt;    &lt;p&gt;Of course, sooner or later, you need a way to store and transmit your platonic unicode strings. It helps if you choose a method that other people can understand, so that you can send text to them, and they to you, in a mutually comprehensible fashion. This is where character encodings come in.&lt;/p&gt;    &lt;p&gt;A character encoding defines a mapping between our platonic characters and some way of representing them as bytes. The mapping doesn't have to be complete - it may have no way to represent certain characters - and it doesn't need to use the same amount of space for each character - some characters may be encoded as a single byte, while others may require several.&lt;/p&gt;    &lt;p&gt;Because there are many ways of representing the same character as bytes, this means that if you have a series of bytes, but do not know their encoding - even if you know the data is textual - the data is meaningless. You can guess, but you'd be doing just that, guessing. In short, &lt;b&gt;bytes are not text&lt;/b&gt;. If you forget everything else in this article, remember that. In order to read and write text, you must first know the encoding you are using, whether from of convention, out of band information, or any other mechanism.&lt;/p&gt;    &lt;h3&gt;How Python handles unicode&lt;/h3&gt;    &lt;p&gt;This is where Python's unicode support comes in. In Python's type heirarchy, there are three distinct string types: 'unicode', which represents unicode strings (text strings), 'str', which represents byte strings (binary data), and 'basestring', which acts as a parent class for both of the other string types. This is where, in my opinion, Python makes its misstep in handling unicode which pushes it into category 3, instead of category 4, by my definition above.&lt;/p&gt;    &lt;p&gt;As I've just spent several paragraphs belabouring, bytes and characters are fundamentally different entities, only interconvertible with the help of a character encoding. Python, unfortunately, does its best to help you forget this, with two separate missteps:&lt;/p&gt;    &lt;p&gt;The first is of debatable significance: treating sequences of bytes as strings. It's arguable whether or not this is a good thing; Java and .NET support the proposition that it's not, while other languages make good arguments in the other direction. In any case, it's certainly true that certain operations you might want to preform on text strings - regular expression matching, string replacement, and so forth - don't entirely make sense on sequences of bytes. Python, though, treats bytes as just a different type of string, and allows the same set of operations on both.&lt;/p&gt;    &lt;p&gt;The second misstep is the more significant one: Python's attempt at transparently converting between byte strings and character strings. In a variety of circumstances, Python will attempt to convert a byte string to a unicode string or vice-versa, when the situation warrants - for example, when attempting to concatenate a byte string and a unicode string together. Since, as we've previously detailed, conversion between the two types is meaningless without an encoding, Python relies on a 'default encoding', specified by sys.setdefaultencoding(). On most platforms, this defaults to ASCII, and it's almost certainly wrong for any given conversion. Other places this encoding is used include calls to str() or unicode() without specifying an encoding yourself, and functions that expect one type of string but are passed the other.&lt;/p&gt;    &lt;p&gt;One solution to some of your unicode woes, then, would be to call sys.setdefaultencoding(), setting the default encoding to whatever you ought to be using. This only masks the root problem, though, which is your failure to handle text correctly in the first place. It may also be impractical, since many apps, particularly webapps, may have to deal with multiple different text encodings in different places.&lt;/p&gt;    &lt;p&gt;The correct solution is to fix your code so that you handle text correctly. Here's the cliff's notes on what you should be doing:&lt;/p&gt;    &lt;ul&gt;  &lt;li&gt;All text strings, everywhere should be of type unicode, not str. If you're handling text, and your variable is a str, it's a bug!&lt;/li&gt;  &lt;li&gt;To decode a byte string as text, use var.decode(encoding) (eg, var.decode('utf-8'), with the correct encoding. To encode a text string as bytes, use var.encode(encoding).&lt;/li&gt;  &lt;li&gt;Never ever use str() on a unicode string, or unicode() on a byte string without a second argument specifying the encoding.&lt;/li&gt;  &lt;li&gt;Whenever you read data from outside your app, expect it to be bytes - eg, of type str - and call .decode() on it to interpret it as text. Likewise, always call .encode() on text you want to send to the outside world.&lt;/li&gt;  &lt;li&gt;If a string literal in your code is intended to represent text, it should always be prefixed with 'u'. In fact, you probably never want to define a raw string literal in your code at all. For what it's worth, though, I'm terrible at this one, as I'm sure pretty much everyone else is, too.&lt;/li&gt;  &lt;/ul&gt;    &lt;p&gt;Python 3, by the way, fixes things, and gets unicode and string handling right, putting it solidly into category 4. See &lt;a href="http://docs.python.org/release/3.0.1/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit"&gt;this section of the What's new page&lt;/a&gt; for details.&lt;/p&gt;    &lt;p&gt;Hopefully this made sense, and if you had any doubts about what exactly unicode is and how to handle it, they're now cleared up. Next time you get a UnicodeEncodeError or UnicodeDecodeError in your app, then, you'll know exactly what's gone wrong, and how to fix it!&lt;/p&gt;  &lt;p&gt;  &lt;span&gt;21 July, 2010&lt;/span&gt;  &lt;/p&gt;    &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;Previous Post&lt;/a&gt;      &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python#"&gt;Next Post&lt;/a&gt;        &lt;h3&gt;Comments&lt;/h3&gt;  &lt;p&gt;      &lt;a href="http://disqus.com/forums/notdot-blog/?url=ref"&gt;View the discussion thread.&lt;/a&gt;  &lt;a href="http://disqus.com"&gt;blog comments powered by &lt;span&gt;Disqus&lt;/span&gt;&lt;/a&gt;              &lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;    &lt;div class="posterous_quote_citation"&gt;via &lt;a href="http://blog.notdot.net/2010/07/Getting-unicode-right-in-Python"&gt;blog.notdot.net&lt;/a&gt;&lt;/div&gt; &lt;p&gt;Good article on the issues you encounter when working with strings and unicode in Python.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/2759017781463016019-8099313241295933953?l=blog.bonelakesoftware.com' alt='' /&gt;&lt;/div&gt;</content><category term="Teaching"></category></entry></feed>